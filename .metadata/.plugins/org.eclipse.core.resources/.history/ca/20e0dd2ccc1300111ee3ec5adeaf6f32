#include "StdString.h"

using namespace icu;
StdString::StdString()
{
    //ctor
    internstr = UnicodeString();
}
StdString::StdString(UChar* other) {

internstr = other;
}
StdString StdString::operator+(UChar other) {
StdString newstr = StdString();
newstr.internstr = internstr+other;
return newstr;
}
StdString::StdString(const UChar* other) {

internstr = (const UChar*)other;
}
StdString::StdString(char* existing) {
	internstr = other;
}
StdString StdString::operator+(StdString other) {
StdString newstr = StdString();
newstr.internstr = internstr+other.internstr;
return newstr;
}
StdString::~StdString()
{
    //dtor
}
int StdString::Length() {
return (int)internstr.length();
}
UChar* StdString::cstr() {

return (UChar*)internstr.getBuffer();
}
StdString StdString::operator+(UChar* other) {
//TODO: Implement this
StdString mstr;
mstr.internstr = internstr+other;
return mstr;
}
void StdString::operator +=(UChar* other) {
internstr+=other;
}
void StdString::operator +=(UChar other) {
internstr+=other;
}
void StdString::AppendLineBreak() {
internstr+="\n";
}
char* StdString::rstr() {
	char* ibuff = new char[internstr.length()];
	UErrorCode code;
	internstr.extract(ibuff,internstr.length(),NULL,&code);
	return ibuff;

}

